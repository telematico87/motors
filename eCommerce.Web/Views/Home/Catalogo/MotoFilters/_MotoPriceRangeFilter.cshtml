@model eCommerce.Web.ViewModels.PriceRangeFilterViewModel

@if (Model != null)
{
    int priceRangeMin = 0;

    //int priceRangeMax = Model.Products != null && Model.Products.Count > 0 ? (int)Model.Products.Max(x => x.Price) : 10000;
    //dont use above approach because the Model.Products are paged results so there could be a scenerio where we get the
    //max price from Model.Products to be 99 but in reality there could be a product with a higher Price on page 2.

    //decimal priceRangeMax = Math.Round(Model.MaxPrice); //just give a max ideal number. There should be a service for it but it could affect the loading speed.

    //round off to nearest hundred
    int priceRangeMax = (int)Math.Round(Model.MaxPrice / 100);
    if (priceRangeMax == 0)
    {
        priceRangeMax = 1;
    }
    priceRangeMax = (int)(priceRangeMax * 100);

    var priceStartFrom = Model.PriceFrom.HasValue ? Model.PriceFrom.Value : priceRangeMin;
    var priceStartTo = Model.PriceTo.HasValue && Model.PriceTo.Value <= priceRangeMax ? Model.PriceTo.Value : priceRangeMax;

    var priceCurrencyFormat = ConfigurationsHelper.PriceCurrencyPosition.Replace("{currency}", string.Format("'{0}'", ConfigurationsHelper.CurrencySymbol));

    var isCurrencyFirst = ConfigurationsHelper.PriceCurrencyPosition.Trim().StartsWith("{currency}");

    <div class="widget widget-price">
        <div class="widget-title">
            <h3>Rango de precios<span></span></h3>
        </div>
        <div class="widget-content">
            <div class="price search-filter-input">
                <div id="slider-range" class="price-slider ui-slider ui-corner-all ui-slider-horizontal ui-widget ui-widget-content">
                    <div class="ui-slider-range ui-corner-all ui-widget-header"></div>
                    <span tabindex="0" class="ui-slider-handle ui-corner-all ui-state-default"></span>
                    <span tabindex="0" class="ui-slider-handle ui-corner-all ui-state-default"></span>
                    <input type="hidden" id="minamountMoto" value="@priceRangeMin">
                    <input type="hidden" id="maxamountMoto" value="@priceRangeMax">
                </div>
                <p class="amount">
                    <input type="text" id="amount" disabled="">
                </p>
            </div>
        </div>
    </div>



    <div class="widget widget-button">

        <form id="priceRangeForm" method="post" action="">
            <input type="hidden" id="fromMoto" name="fromMoto" value="@(priceStartFrom > priceRangeMin ? string.Format("{0}", priceStartFrom) : "")" @(priceStartFrom > priceRangeMin ? string.Empty : "disabled=disabled")>
            <input type="hidden" id="toMoto" name="toMoto" value="@(priceStartTo < priceRangeMax ? string.Format("{0}", priceStartTo) : "")" @(priceStartTo < priceRangeMax ? string.Empty : "disabled=disabled")>

            <div class="row">
                <div class="col-lg-6 col-6">
                    <a href="@Url.CatalogoMoto(categoryId: 0, marcaId : 0)" class="waves-classic" id="btn-limpiar">LIMPIAR</a>
                </div>
                <div class="col-lg-6 col-6">
                    <a href="javascript:{}" onclick="searchRange()" class="waves-effect">FILTRAR</a>
                </div>
            </div>
        </form>

    </div>

    <script type="text/javascript">

        function searchRange() {
            var amount = $("#amount").val();
            var amountSplit = amount.split('-');
            var fromText = amountSplit[0].trim();
            var toText = amountSplit[1].trim();

            var from = fromText.slice(2);
            var to = toText.slice(2);

            $("[name=fromMoto]").val(from);
            $("[name=toMoto]").val(to);

            Search();
            e.preventDefault();
        }

    </script>
}

