@model eCommerce.Web.Areas.Dashboard.ViewModels.RoleDetailsViewModel

@if (Model != null && Model.Role != null)
{
    <form id="role-form">
        <input type="hidden" name="roleID" value="@Model.Role.Id" />
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">@("Dashboard.RoleDetails.Info.Name".Localized())</label>
            <div class="col-sm-10">
                <input name="roleName" type="text" class="form-control" value="@Model.Role.Name" required @(Model.Role.Name.ToLower().Equals("administrator") ? "disabled" : string.Empty)>
            </div>
        </div>

        @if (!Model.Role.Name.ToLower().Equals("administrator"))
        {
            <div class="form-group row">
                <div class="offset-sm-2 col-sm-10">
                    <div class="btn-group float-right" role="group">
                        <button id="btnUpdate" type="button" class="btn btn-success @(Model.Role.Name.ToLower().Equals("administrator") ? "disabled" : string.Empty)"><i class="fas fa-edit mr-1"></i> @("Dashboard.RoleDetails.Info.Update".Localized())</button>
                        <button id="deleteButton" type="button" class="btn btn-danger @(Model.Role.Name.ToLower().Equals("administrator") ? "disabled" : string.Empty)"><i class="fas fa-trash-alt mr-1"></i> @("Dashboard.RoleDetails.Info.Delete".Localized())</button>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="form-group row">
                <div class="offset-sm-2 col-sm-10">
                    <div class="alert alert-danger" role="alert">
                        @("Dashboard.RoleDetails.Info.AdministratorRoleNotification".Localized())
                    </div>
                </div>
            </div>
        }
    </form>

    <script>
        $("#role-form").validate({
            errorClass: "alert alert-danger",
            errorElement: "div",
            rules: {
                roleName: {
                    required: true,
                    minlength: 3,
                    maxlength: 25
                },
            },
            messages: {
                roleName: {
                    required: "@("Dashboard.Roles.Save.Validations.NameRequired".Localized())",
                    minlength: "@("Dashboard.Roles.Save.Validations.NameMinimumLength".LocalizedString().Replace("{min}", "3"))",
                    maxlength: "@("Dashboard.Roles.Save.Validations.NameMaximumLength".LocalizedString().Replace("{max}", "25"))"
                }
            },
            highlight: function (element, errorClass) {
                $(element).removeClass(errorClass);
            }
        });
        
        $("#btnUpdate").click(function () {
            if ($("#role-form").valid()) {
                addLoader("response-holder");
       	    	$.ajax({
       	    		url: "@Url.EditAction("Roles")",
                    type: "post",
                    data: $("#role-form").serialize()
       	    	})
                .done(function (response) {
                    removeLoader("response-holder");
                    if (response != null && response.Success != undefined && response.Success) {
                        Swal.fire("@("Dashboard.Message.Success".Localized())", "@("Dashboard.RoleDetails.Info.RoleInfoUpdated".Localized())", "success");
       	    	    }
                    else {
                        Swal.fire("@("Dashboard.Message.Error".Localized())", response.Message, "error");
       	    	    }
       	    	})
                .fail(function () {
                    removeLoader("response-holder");
                    Swal.fire("@("Dashboard.Message.Error".Localized())", "@("Dashboard.Message.GenericErrorMessage".Localized())", "error");
                });
            }
        });

        $("#deleteButton").click(function () {
            Swal.fire({
                title: '@("Dashboard.Message.Warning".Localized())',
                text: "@("Dashboard.Message.ConfirmDeleteWarning".Localized())",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '@("Dashboard.Message.ConfirmDelete".Localized())',
                cancelButtonText: '@("Dashboard.Message.CancelDelete".Localized())'
            }).then((result) => {
                if (result.value) {
                    addLoader("response-holder");
       	    	    $.ajax({
       	    	    	url: "@Url.DeleteAction("Roles")",
                        type: "post",
                        data: {
                            roleID : "@Model.Role.Id" 
                        }
       	    	    })
                    .done(function (response) {
                        if (response != null && response.Success != undefined && response.Success) {
                            window.location.href = "@Url.ListAction("Roles")";
       	    	        }
                        else {
                            removeLoader("response-holder");
                            Swal.fire("@("Dashboard.Message.Error".Localized())", response.Message, "error");
       	    	        }
       	    	    })
                    .fail(function () {
                        removeLoader("response-holder");
                        Swal.fire("@("Dashboard.Message.Error".Localized())", "@("Dashboard.Message.GenericErrorMessage".Localized())", "error");
       	            });
                }
            });
        });
    </script>
}