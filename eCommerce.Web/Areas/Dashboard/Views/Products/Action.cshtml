@model ProductActionViewModel
@{
    String iconoMoneda = "S/";
    if (Model != null)
    {
        if (Model.ProductID > 0)
        {
            Model.PageTitle = "Dashboard.Products.EditProductTitle".LocalizedString();
            Model.PageDescription = "Dashboard.Products.EditProductDescription".LocalizedString();
            Model.PageURL = Url.EditAction("Products", Model.ProductID);
            iconoMoneda = Model.TipoMoneda == 2 ? "$" : "S/";

        }
        else
        {
            Model.PageTitle = "Dashboard.Products.CreateProductTitle".LocalizedString();
            Model.PageDescription = "Dashboard.Products.CreateProductDescription".LocalizedString();
            Model.PageURL = Url.CreateAction("Products");
            Model.ProductoCaracteristica = new ProductoCaracteristica();
        }

        Model.PageImageURL = PictureHelper.PageImageURL("products.jpg");
    }

    var productSpecificationCount = 0;
    var productColorCount = 0;
    var existeProductStocks = Model.ExisteProductStocks ? 1 : 0;

}

<script src="~/Content/lib/ckeditor-4.14.0/ckeditor.js"></script>

<div class="page-info-container">
    <h3 class="h3 mb-2 text-gray-800">
        @Model.PageTitle
    </h3>
    <p>
        @Model.PageDescription
    </p>
    <hr />
</div>

<div class="page-data-holder mb-4">
    <form id="actionForm" method="post">
        <input type="hidden" name="ProductID" value="@Model.ProductID" />
        <input type="hidden" name="ProductRecordID" value="@Model.ProductRecordID" />
        <input type="hidden" name="LanguageID" value="@AppDataHelper.CurrentLanguage.ID" />

        <div class="card mt-3">
            @if (ConfigurationsHelper.EnableMultilingual)
            {
                <div class="card-header">
                    <ul class="nav nav-tabs card-header-tabs">
                        @foreach (var language in LanguagesHelper.EnabledLanguages)
                        {
                            var isActive = language.ShortCode == AppDataHelper.CurrentLanguage.ShortCode;

                            <li class="nav-item">
                                <a class="nav-link @(isActive ? "active" : string.Empty)" href="@(isActive ? "#" : Url.LanguageBasedURL(language.ShortCode))">
                                    @language.Name
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            }
            <div class="card-body">
                <div class="form-group">
                    <label>
                        @("Dashboard.Products.Action.Name".Localized())
                    </label>
                    <input class="form-control" name="Name" value="@Model.Name" placeholder="@("Dashboard.Products.Action.NamePlaceholder".Localized())" />
                </div>

                <div class="form-group">
                    <label>
                        @("Dashboard.Products.Action.Summary".Localized())
                    </label>
                    <textarea class="form-control" id="Summary" name="Summary" placeholder="@("Dashboard.Products.Action.SummaryPlaceholder".Localized())" rows="3">@Model.Summary</textarea>
                </div>

                <div class="form-group">
                    <label>
                        @("Dashboard.Products.Action.Description".Localized())
                    </label>
                    <textarea class="form-control" id="Description" name="Description" placeholder="@("Dashboard.Products.Action.DescriptionPlaceholder".Localized())" rows="10">@Model.Description</textarea>
                </div>
            </div>
        </div>

        <div class="card mt-3">
            <div class="card-body">
                <div class="form-group">
                    <label>
                        Variantes
                    </label>
                    <div class="input-group">
                        <button type="button" onclick="loadVariantes()" class="btn btn-primary" data-toggle="modal" data-target="#varianteModal">
                            Agregar Variante
                        </button>
                        <button type="button" onclick="fillTableVariante()">
                            Fill Variante
                        </button>
                    </div>
                </div>
                <div class="form-group mb-0">
                    <table class="table table-striped mb-0" id="varianteTable">
                        <thead>
                            <tr>
                                <th scope="col" width="10%">Foto</th>
                                <th scope="col" width="45%">Variante</th>
                                <th scope="col" width="10%">Stock</th>
                                <th scope="col" width="10%">SKU</th>
                                <th scope="col" width="10%">Precio</th>
                                <th scope="col" width="10%">Acción</th>
                            </tr>
                        </thead>
                        <tbody>


                            @if (Model.ProductStocks != null && Model.ProductStocks.Count > 0)
                            {
                                var contadorStock = 0;
                                foreach (var productStock in Model.ProductStocks)
                                {

                                    var varVarianteStock = string.Format("txtVarianteStock{0}", contadorStock);
                                    var varVarianteSku = string.Format("txtVarianteSku{0}", contadorStock);
                                    var varVariantePrice = string.Format("txtVariantePrice{0}", contadorStock);
                                    var varVariantePhoto = string.Format("txtVariantePhoto{0}", contadorStock);

                                    var colorName = productStock.ColorName;
                                    var sizeName = productStock.TallaName;
                                    var nameStock = sizeName + " " + colorName;

                                    <tr class="varianteRow">
                                        <td class="varPhoto" scope="row">
                                            <input name="@varVariantePhoto" type='hidden' value='0' />

                                        </td>
                                        <td class="varDescription">@nameStock</td>
                                        <td class="varStock"><input class='form-control' name='@varVarianteStock' type='text' value='@productStock.Stock' data-color-id="@productStock.ColorID" data-size-id="@productStock.TallaID" /> </td>
                                        <td class="varSku"><input class='form-control' name='@varVarianteSku' type='text' value='@productStock.SKU' /> </td>
                                        <td class="varPrice"><input class='form-control' name='@varVariantePrice' type='text' value='@productStock.Precio' /> </td>
                                        <td>
                                            <button class="btn btn-danger btn-sm" type="button" onclick="removeRow(this)">
                                                Eliminar
                                            </button>
                                        </td>
                                    </tr>
                                    contadorStock++;
                                }
                            }
                            else
                            {

                                <tr id="noVarianteRow" style="@(Model.ProductStocks == null || Model.ProductStocks.Count == 0 ? string.Empty : "display:none")">
                                    <td scope="row" colspan="6">@("Dashboard.Products.Action.NoSpecifications".Localized())</td>
                                </tr>
                            }


                        </tbody>
                    </table>
                </div>

            </div>
        </div>

        <div class="card mt-3" style="display: none">
            <div class="card-body">
                <div class="form-group">
                    <label>
                        Color
                    </label>
                    <div class="input-group">
                        <select class="form-control" name="ColorID" id="ColorID">
                            @foreach (var color in Model.Colors)
                            {
                                <option value="@color.ID, @color.Valor">@color.Description  </option>
                            }
                        </select>
                        <div class="input-group-append">
                            <button class="btn btn-outline-secondary" type="button" id="addColor">Agregar Color</button>
                        </div>
                    </div>
                </div>
                <div class="form-group mb-0" style="display:none">
                    <table class="table table-striped mb-0" id="colorsTable">
                        <thead>
                            <tr>
                                <th scope="col" width="45%">Titulo Color</th>
                                <th scope="col" width="45%">Valor Color</th>
                                <th scope="col" width="10%">Acción</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.ProductColors != null && Model.ProductColors.Count > 0)
                            {
                                foreach (var productColors in Model.ProductColors)
                                {
                                    productColorCount++;

                                    var colorName = string.Format("colorproduct{0}", productColorCount);

                                    var colorType = productColors.Color.Description.GetSubstringText("", "~");
                                    var colorValue = productColors.Color.Valor.GetSubstringText("~", "");

                                    <tr id="@colorName" class="colorRow">
                                        <td class="title" scope="row">@productColors.Color.Description</td>
                                        <td class="value">@productColors.Color.Valor</td>
                                        <td>
                                            <input type="hidden" name="@colorName" value="@string.Format("{0}~{1}", productColors.Color.Description, productColors.Color.Valor)" />
                                            <button class="btn btn-danger deleteColorButton btn-sm" type="button" onclick="removeColorRow(this)">
                                                Eliminar
                                            </button>
                                        </td>
                                    </tr>
                                }
                            }

                            <tr id="noColorRow" style="@(Model.ProductColors == null || Model.ProductColors.Count == 0 ? string.Empty : "display:none")">
                                <td scope="row" colspan="3">Sin Colores</td>
                            </tr>
                        </tbody>
                    </table>
                </div>

            </div>
        </div>


        <div class="card mt-3">
            <div class="card-body">
                <div class="form-group">
                    <label>
                        @("Dashboard.Products.Action.ProductSpecifications".Localized())
                    </label>
                    <div class="input-group">
                        <input id="SpecificationTitle" type="text" class="form-control" placeholder="@("Dashboard.Products.Action.SpecificationTitle".Localized())">
                        <input id="SpecificationValue" type="text" class="form-control" placeholder="@("Dashboard.Products.Action.SpecificationValue".Localized())">
                        <div class="input-group-append">
                            <button class="btn btn-outline-secondary" type="button" id="addSpecification">@("Dashboard.Products.Action.AddSpecification".Localized())</button>
                        </div>
                    </div>
                </div>

                <div class="form-group mb-0">
                    <table class="table table-striped mb-0" id="specificationsTable">
                        <thead>
                            <tr>
                                <th scope="col" width="45%">@("Dashboard.Products.Action.SpecificationTitle".Localized())</th>
                                <th scope="col" width="45%">@("Dashboard.Products.Action.SpecificationValue".Localized())</th>
                                <th scope="col" width="10%">@("Dashboard.Products.Action.SpecificationAction".Localized())</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.ProductSpecifications != null && Model.ProductSpecifications.Count > 0)
                            {
                                foreach (var specicification in Model.ProductSpecifications)
                                {
                                    productSpecificationCount++;

                                    var specName = string.Format("specification{0}", productSpecificationCount);

                                    var specificationTitle = specicification.Value.GetSubstringText("", "~");
                                    var specificationValue = specicification.Value.GetSubstringText("~", "");

                                    <tr id="@specName" class="specificationRow">
                                        <td class="title" scope="row">@specicification.Title</td>
                                        <td class="value">@specicification.Value</td>
                                        <td>
                                            <input type="hidden" name="@specName" value="@string.Format("{0}~{1}", specicification.Title, specicification.Value)" />
                                            <button class="btn btn-danger deleteSpecificationButton btn-sm" type="button" onclick="removeRow(this)">
                                                @("Dashboard.Products.Action.SpecificationDelete".Localized())
                                            </button>
                                        </td>
                                    </tr>
                                }
                            }
                            <tr id="noSpecificationRow" style="@(Model.ProductSpecifications == null || Model.ProductSpecifications.Count == 0 ? string.Empty : "display:none")">
                                <td scope="row" colspan="3">@("Dashboard.Products.Action.NoSpecifications".Localized())</td>
                            </tr>
                        </tbody>
                    </table>
                </div>

            </div>
        </div>


        <div class="card mt-3">
            <div class="card-body">
                <div class="form-group">
                    <label>
                        Catalogo
                    </label>
                    <select class="form-control" name="CatalogoID" id="cboCatalogo">
                        <option value="0">SELECCIONE</option>
                        @foreach (var catalogo in Model.Catalogos)
                        {
                            var selected = Model.CatalogoID == catalogo.ID ? "selected" : string.Empty;
                            <option value="@catalogo.ID" @selected>@catalogo.Description</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <label>
                        @("Dashboard.Products.Action.Category".Localized())
                    </label>
                    <select class="form-control" name="CategoryID" id="cboCategoria">
                        @foreach (var category in Model.Categories)
                        {
                            var selected = Model.CategoryID == category.ID ? "selected" : string.Empty;

                            var currentLanguageCategoryRecord = category.CategoryRecords.FirstOrDefault(x => x.LanguageID == AppDataHelper.CurrentLanguage.ID);

                            if (currentLanguageCategoryRecord != null)
                            {
                                <option value="@category.ID" @selected>@currentLanguageCategoryRecord.Name</option>
                            }
                            else
                            {
                                <option value="@category.ID" @selected>@category.SanitizedName</option>
                            }
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label>
                        Marca
                    </label>
                    <select class="form-control" name="MarcaID" id="cboMarca">
                        @foreach (var marca in Model.Marcas)
                        {
                            var selected = Model.MarcaID == marca.ID ? "selected" : string.Empty;
                            <option value="@marca.ID" @selected>@marca.Descripcion</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <label>
                        @("Dashboard.Products.Action.SKU".Localized())
                    </label>
                    <input class="form-control" name="SKU" value="@Model.SKU" placeholder="@("Dashboard.Products.Action.SKUPlaceholder".Localized())" />
                </div>

                <div class="form-group">
                    <label>
                        Tipo Moneda
                    </label>
                    <select class="form-control" name="TipoMoneda" id="TipoMoneda">
                        @foreach (var tipoMoneda in Model.TipoMonedas)
                        {
                            var selected = Model.TipoMoneda == tipoMoneda.Codigo ? "selected" : string.Empty;
                            <option value="@tipoMoneda.Codigo" @selected>@tipoMoneda.Name</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <label>
                        @("Dashboard.Products.Action.Price".Localized())
                    </label>
                    <div class="input-group">
                        @if (ConfigurationsHelper.PriceCurrencyPosition.ToLower().StartsWith("{price}"))
                        {
                            <input type="text" class="form-control" name="Price" value="@Model.Price" placeholder="@("Dashboard.Products.Action.PricePlaceholder".Localized())">
                            <div class="input-group-append">
                                <span class="input-group-text icono-moneda">@iconoMoneda</span>
                            </div>
                        }
                        else
                        {
                            <div class="input-group-prepend">
                                <span class="input-group-text icono-moneda">@iconoMoneda</span>
                            </div>
                            <input type="text" class="form-control" name="Price" value="@Model.Price" placeholder="@("Dashboard.Products.Action.PricePlaceholder".Localized())">
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>
                                Descuento
                            </label>
                            <div class="input-group">
                                @if (ConfigurationsHelper.PriceCurrencyPosition.ToLower().StartsWith("{price}"))
                                {
                                    <input type="text" class="form-control" name="Discount" value="@Model.Discount">
                                    <div class="input-group-append">
                                        <span class="input-group-text icono-moneda">@iconoMoneda</span>
                                    </div>
                                }
                                else
                                {
                                    <div class="input-group-prepend">
                                        <!--<span class="input-group-text">-->@*@ConfigurationsHelper.CurrencySymbol*@<!--</span>-->
                                        <span class="input-group-text icono-moneda">@iconoMoneda</span>
                                    </div>
                                    <input type="text" class="form-control" name="Discount" value="@Model.Discount">
                                }
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>
                                Etiqueta Descuento
                            </label>
                            <div class="input-group">
                                <input type="text" class="form-control" name="EtiquetaOferta" value="@Model.EtiquetaOferta">
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label>
                        Precio Costo
                    </label>
                    <div class="input-group">
                        @if (ConfigurationsHelper.PriceCurrencyPosition.ToLower().StartsWith("{price}"))
                        {
                            <input type="text" class="form-control" name="Cost" value="@Model.Cost">
                            <div class="input-group-append">
                                <span class="input-group-text icono-moneda">@iconoMoneda</span>
                            </div>
                        }
                        else
                        {
                            <div class="input-group-prepend">
                                <span class="input-group-text icono-moneda">@iconoMoneda</span>
                            </div>
                            <input type="text" class="form-control" name="Cost" value="@Model.Cost">
                        }
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="form-check" title="Marque si Incluye Soat">
                                <input type="checkbox" name="IncluyeSoat" value="true" class="form-check-input" id="IncluyeSoat" @(Model.IncluyeSoat ? "checked" : string.Empty)>
                                <input type="hidden" name="IncluyeSoat" value="false">

                                <label class="form-check-label" for="IncluyeSoat">
                                    Incluye Soat
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>
                                Etiqueta SOAT
                            </label>
                            <input type="text" class="form-control" name="EtiquetaSoat" value="@Model.EtiquetaSoat">
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label>
                        @("Dashboard.Products.Action.Barcode".Localized())
                    </label>
                    <input class="form-control" name="Barcode" value="@Model.Barcode" placeholder="@("Dashboard.Products.Action.BarcodePlaceholder".Localized())" />
                </div>

                <div class="form-group">
                    <label>
                        @("Dashboard.Products.Action.Tags".Localized())
                    </label>
                    <input class="form-control" name="Tags" value="@Model.Tags" placeholder="@("Dashboard.Products.Action.TagsPlaceholder".Localized())" />
                </div>

                <div class="form-group">
                    <label>
                        @("Dashboard.Products.Action.Supplier".Localized())
                    </label>
                    <input class="form-control" name="Supplier" value="@Model.Supplier" placeholder="@("Dashboard.Products.Action.SupplierPlaceholder".Localized())" />
                </div>

                <div class="form-group">
                    <label>
                        @("Dashboard.Products.Action.StockQuantity".Localized())
                    </label>
                    <input class="form-control" name="StockQuantity" value="@Model.StockQuantity" placeholder="@("Dashboard.Products.Action.StockQuantityPlaceholder".Localized())" />
                </div>

                <div class="form-group" id="pics-container">
                    <label>
                        @("Dashboard.Products.Action.SelectPictures".Localized())
                    </label>
                    <input id="productPictures" class="uPicUploadInput form-control" type="file" multiple />
                    <div id="picturesArea" class="row pb-2">
                        @if (Model.ProductPicturesList != null && Model.ProductPicturesList.Count > 0)
                        {
                            foreach (var picture in Model.ProductPicturesList)
                            {
                                var stockColor = 0.0;
                                var idColorStock = 0;
                                var colorName = "";
                                var existeColorStock = false;
                                var textoBoton = "Agregar Color/Stock";
                                var classBoton = "btn btn-info btn-block";

                                ProductColor pc = new ProductColor();

                                if (Model.ProductColors != null && Model.ProductColors.Count > 0)
                                {
                                    pc = Model.ProductColors.FirstOrDefault(x => x.PictureID == picture.PictureID);

                                    if (pc != null)
                                    {
                                        existeColorStock = true;
                                        stockColor = pc.Stock;
                                        idColorStock = pc.ColorID;
                                        colorName = pc.Color.Description;
                                        textoBoton = "Eliminar Color/Stock";
                                        classBoton = "btn btn-danger btn-block";
                                    }
                                }

                                var divColor = existeColorStock ? "block" : "none";

                                <div class="thisImage col-md-3">
                                    <div class="card mt-4">
                                        <div class="uPicHolder card-body text-center">
                                            <img class='image img-thumbnail' src='@Html.PictureSource(picture.Picture.URL)' data-id="@picture.PictureID" />
                                        </div>
                                        <ul class="list-group list-group-flush">
                                            <li class="list-group-item">
                                                <input type="hidden" name="productImageId" class="stock-color-image-id" id="@string.Format("product-image-id-{0}", picture.PictureID)" value="@picture.PictureID" />
                                                <input type="radio" name="ThumbnailPicture" class="mr-1" value="@picture.PictureID" id="@string.Format("r{0}", picture.PictureID)" @(picture.PictureID == Model.ThumbnailPicture ? "checked" : string.Empty)>
                                                <label for="@string.Format("r{0}", picture.PictureID)">@("Dashboard.Products.Action.SetThumbnailImage".Localized())</label>

                                                <button class="@classBoton" type="button" id="@string.Format("btn-add-color-id-{0}", picture.PictureID)" onclick="showhideColorStock(@picture.PictureID)">@textoBoton</button>
                                                <div class="div-product-color" style="display: @divColor" data-id="div-product-color-@picture.PictureID">
                                                    <label>Color</label>
                                                    <select class="form-control sel-color" id="@string.Format("sel-color-id-{0}", picture.PictureID)">
                                                        @if (existeColorStock)
                                                        {
                                                            <option value="@idColorStock">@colorName</option>
                                                        }

                                                        <option value="0">Seleccione...</option>
                                                        @foreach (var color in Model.Colors)
                                                        {
                                                            <option value="@color.ID">@color.Description</option>
                                                        }
                                                    </select>
                                                    <label>Stock</label>
                                                    <input type="number" class="form-control stock-color" id="@string.Format("stock-color-id-{0}", picture.PictureID)" value="@stockColor" min="0" max="100" />
                                                </div>
                                            </li>
                                        </ul>
                                        <div class="card-footer">
                                            <button type="button" class="btn btn-danger" onclick="removeImage(this)"><i class="fas fa-times mr-1"></i> @("Dashboard.Products.Action.RemovePicture".Localized())</button>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                    <input type="hidden" name="ProductPictures" id="pictureIDs" />
                    <input type="hidden" name="ProductColorsPicture" id="colorStockIDs" />
                    <input type="hidden" name="ProductColorsId" id="colorIDs" />
                    <input type="hidden" name="ProductColorsStock" id="stockByColors" />

                    <input type="hidden" name="ProductStockSize" id="productStockBySizes" />
                    <input type="hidden" name="ProductStockColor" id="productStockByColors" />
                    <input type="hidden" name="ProductStockSKU" id="productStockBySKUs" />
                    <input type="hidden" name="ProductStockQuantity" id="productStockByQuantities" />
                    <input type="hidden" name="ProductStockPrice" id="productStockByPrices" />
                    <input type="hidden" name="ExisteProductStock" id="ExisteProductStock" value="@existeProductStocks" />
                </div>

                <div class="form-group">
                    <div class="form-check" title="To mark this Product as featured product.">
                        <input type="checkbox" name="isFeatured" value="true" class="form-check-input" id="isFeatured" @(Model.isFeatured ? "checked" : string.Empty)>
                        <input type="hidden" name="isFeatured" value="false">

                        <label class="form-check-label" for="isFeatured">
                            @("Dashboard.Products.Action.FeaturedProduct".Localized())
                        </label>
                    </div>
                </div>

                <div class="form-group">
                    <div class="form-check" title="To mark this Product as inactive.">
                        <input type="checkbox" name="InActive" value="true" class="form-check-input" id="InActive" @(Model.InActive ? "checked" : string.Empty)>
                        <input type="hidden" name="InActive" value="false">

                        <label class="form-check-label" for="InActive">
                            Producto Inactivo
                        </label>
                    </div>
                </div>

                <div class="form-group">
                    <div class="form-check" title="Activar si el Producto es Moto">
                        <input type="checkbox" name="TipoProducto" value="true" class="form-check-input" id="TipoProducto" @(Model.TipoProducto ? "checked" : string.Empty)>
                        <input type="hidden" name="TipoProducto" value="false">
                        <label class="form-check-label" for="TipoProducto">
                            Es Moto?
                        </label>
                    </div>
                </div>
                <br />
                <hr />


                <div class="card" id="TagMotos" style="display:none;">
                    <div class="card-header">
                        <ul class="nav nav-tabs card-header-tabs">
                            <li class="nav-item">
                                <a class="pointerCursor user-link nav-link active" data-toggle="tab" href="#Destacados">Destacados</a>
                            </li>
                            <li class="nav-item">
                                <a class="pointerCursor user-link nav-link" data-toggle="tab" href="#Motor">Motor</a>
                            </li>
                            <li class="nav-item">
                                <a class="pointerCursor user-link nav-link" data-toggle="tab" href="#Frenos">Frenos</a>
                            </li>
                            <li class="nav-item">
                                <a class="pointerCursor user-link nav-link" data-toggle="tab" href="#ArosLlantas">Aros y Llantas</a>
                            </li>
                            <li class="nav-item">
                                <a class="pointerCursor user-link nav-link" data-toggle="tab" href="#Suspension">Suspensión</a>
                            </li>
                            <li class="nav-item">
                                <a class="pointerCursor user-link nav-link" data-toggle="tab" href="#Consumo">Consumo y Rendimiento</a>
                            </li>
                            <li class="nav-item">
                                <a class="pointerCursor user-link nav-link" data-toggle="tab" href="#Transmision">Transmisión</a>
                            </li>
                            <li class="nav-item">
                                <a class="pointerCursor user-link nav-link" data-toggle="tab" href="#Dimensiones">Dimensiones</a>
                            </li>
                        </ul>
                    </div>
                    <div class="card-body" id="response-holder">
                        <!-- Tab panes -->
                        <div class="tab-content">
                            <div id="Destacados" class="container tab-pane active">
                                <br>
                                <div class="row">
                                    <div class="col-md-6 form-group">
                                        <label>
                                            Texto 1
                                        </label>
                                        <input class="form-control" name="Texto1" value="@Model.ProductoCaracteristica.destacados.Texto1" />
                                    </div>

                                    <div class="col-md-6 form-group">
                                        <label>
                                            Texto 2
                                        </label>
                                        <input class="form-control" name="Texto2" value="@Model.ProductoCaracteristica.destacados.Texto2" />
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6 form-group">
                                        <label>
                                            Texto 3
                                        </label>
                                        <input class="form-control" name="Texto3" value="@Model.ProductoCaracteristica.destacados.Texto3" />
                                    </div>
                                    <div class="col-md-6 form-group">
                                        <label>
                                            Texto 4
                                        </label>
                                        <input class="form-control" name="Texto4" value="@Model.ProductoCaracteristica.destacados.Texto4" />
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-4 form-group">
                                        <label>
                                            Compacta
                                        </label>
                                        <input class="form-control" name="Compacta" value="@Model.ProductoCaracteristica.destacados.Compacta" />
                                    </div>
                                    <div class="col-md-4 form-group">
                                        <label>
                                            AroRayos
                                        </label>
                                        <input class="form-control" name="AroRayos" value="@Model.ProductoCaracteristica.destacados.AroRayos" />
                                    </div>
                                    <div class="col-md-4 form-group">
                                        <label>
                                            Garantía
                                        </label>
                                        <input class="form-control" name="Garantia" value="@Model.ProductoCaracteristica.destacados.Garantia" />
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-4 form-group">
                                        <label>
                                            Colores Disponibles
                                        </label>
                                        <input class="form-control" name="ColoresDisponibles" value="@Model.ProductoCaracteristica.destacados.ColoresDisponibles" />
                                    </div>
                                    <div class="col-md-4 form-group">
                                        <label>
                                            Adicionales
                                        </label>
                                        <input class="form-control" name="Adicionales" value="@Model.ProductoCaracteristica.destacados.Adicionales" />
                                    </div>
                                    <div class="col-md-4 form-group">
                                        <label>
                                            Tablero
                                        </label>
                                        <input class="form-control" name="Tablero" value="@Model.ProductoCaracteristica.destacados.Tablero" />
                                    </div>
                                </div>

                            </div>
                            <div id="Motor" class="container tab-pane fade">
                                <br>
                                <div class="row">
                                    <div class="col-md-6 form-group">
                                        <label>
                                            Cilindrada
                                        </label>
                                        <input class="form-control" name="Cilindrada" value="@Model.ProductoCaracteristica.motor.Cilindrada" />
                                    </div>

                                    <div class="col-md-6 form-group">
                                        <label>
                                            Nro Cilindros
                                        </label>
                                        <input class="form-control" name="NroCilindrada" value="@Model.ProductoCaracteristica.motor.NroCilindrada" />
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-4 form-group">
                                        <label>
                                            Potencia
                                        </label>
                                        <input class="form-control" name="Potencia" value="@Model.ProductoCaracteristica.motor.Potencia" />
                                    </div>
                                    <div class="col-md-4 form-group">
                                        <label>
                                            Tipo Motor
                                        </label>
                                        <input class="form-control" name="TipoMotor" value="@Model.ProductoCaracteristica.motor.TipoMotor" />
                                    </div>
                                    <div class="col-md-4 form-group">
                                        <label>
                                            Torque
                                        </label>
                                        <input class="form-control" name="Torque" value="@Model.ProductoCaracteristica.motor.Torque" />
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-4 form-group">
                                        <label>
                                            Sistema Enfriamiento
                                        </label>
                                        <input class="form-control" name="SistemaEnfriamiento" value="@Model.ProductoCaracteristica.motor.SistemaEnfriamiento" />
                                    </div>
                                    <div class="col-md-4 form-group">
                                        <label>
                                            Sistema Encendido
                                        </label>
                                        <input class="form-control" name="SistemaEncendido" value="@Model.ProductoCaracteristica.motor.SistemaEncendido" />
                                    </div>
                                    <div class="col-md-4 form-group">
                                        <label>
                                            Sistema de Arranque
                                        </label>
                                        <input class="form-control" name="SistemaArranque" value="@Model.ProductoCaracteristica.motor.SistemaArranque" />
                                    </div>
                                </div>
                            </div>
                            <div id="Frenos" class="container tab-pane fade">
                                <br>
                                <div class="row">
                                    <div class="col-md-6 form-group">
                                        <label>
                                            Frenos Delanteros
                                        </label>
                                        <input class="form-control" name="FrenoDelantero" value="@Model.ProductoCaracteristica.frenos.FrenoDelantero" />
                                    </div>
                                    <div class="col-md-6 form-group">
                                        <label>
                                            Frenos Posterior
                                        </label>
                                        <input class="form-control" name="FrenoTrasero" value="@Model.ProductoCaracteristica.frenos.FrenoTrasero" />
                                    </div>
                                </div>
                            </div>
                            <div id="ArosLlantas" class="container tab-pane fade">
                                <br>
                                <div class="row">
                                    <div class="col-md-6 form-group">
                                        <label>
                                            Neumático Delanteros
                                        </label>
                                        <input class="form-control" name="NeumaticoDelantero" value="@Model.ProductoCaracteristica.arollanta.NeumaticoDelantero" />
                                    </div>
                                    <div class="col-md-6 form-group">
                                        <label>
                                            Neumático Posterior
                                        </label>
                                        <input class="form-control" name="NeumaticoPosterior" value="@Model.ProductoCaracteristica.arollanta.NeumaticoPosterior" />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6 form-group">
                                        <label>
                                            Aro Delantero
                                        </label>
                                        <input class="form-control" name="AroDelantero" value="@Model.ProductoCaracteristica.arollanta.AroDelantero" />
                                    </div>
                                    <div class="col-md-6 form-group">
                                        <label>
                                            Aro Posterior
                                        </label>
                                        <input class="form-control" name="AroPosterior" value="@Model.ProductoCaracteristica.arollanta.AroPosterior" />
                                    </div>
                                </div>
                            </div>
                            <div id="Suspension" class="container tab-pane fade">
                                <br>
                                <div class="form-group">
                                    <label>
                                        Suspensión delantera
                                    </label>
                                    <input class="form-control" name="SuspensionDelantera" value="@Model.ProductoCaracteristica.suspension.SuspensionDelantera" />
                                </div>

                                <div class="form-group">
                                    <label>
                                        Suspensión Posterior
                                    </label>
                                    <input class="form-control" name="SuspensionPosterior" value="@Model.ProductoCaracteristica.suspension.SuspensionPosterior" />
                                </div>
                            </div>
                            <div id="Consumo" class="container tab-pane fade">
                                <br>
                                <div class="form-group">
                                    <label>
                                        Octanaje
                                    </label>
                                    <input class="form-control" name="Octanaje" value="@Model.ProductoCaracteristica.consumo.Octanaje" />
                                </div>

                                <div class="form-group">
                                    <label>
                                        Sistema Combustible
                                    </label>
                                    <input class="form-control" name="SistemaCombustible" value="@Model.ProductoCaracteristica.consumo.SistemaCombustible" />
                                </div>
                                <div class="form-group">
                                    <label>
                                        Capacidad Tanque
                                    </label>
                                    <input class="form-control" name="CapacidadTanque" value="@Model.ProductoCaracteristica.consumo.CapacidadTanque" />
                                </div>

                                <div class="form-group">
                                    <label>
                                        Autonomía
                                    </label>
                                    <input class="form-control" name="Autonomia" value="@Model.ProductoCaracteristica.consumo.Autonomia" />
                                </div>
                                <div class="form-group">
                                    <label>
                                        Rendimiento Galón
                                    </label>
                                    <input class="form-control" name="RendimientoGalon" value="@Model.ProductoCaracteristica.consumo.RendimientoGalon" />
                                </div>
                            </div>
                            <div id="Transmision" class="container tab-pane fade">
                                <br>
                                <div class="form-group">
                                    <label>
                                        Transmisión
                                    </label>
                                    <input class="form-control" name="Transmision" value="@Model.ProductoCaracteristica.transmisiones.Transmision" />
                                </div>
                                <div class="form-group">
                                    <label>
                                        Nro Cambios
                                    </label>
                                    <input class="form-control" name="NroCambios" value="@Model.ProductoCaracteristica.transmisiones.NroCambios" />
                                </div>
                                <div class="form-group">
                                    <label>
                                        Velocidad Máxima
                                    </label>
                                    <input class="form-control" name="VelocidadMaxima" value="@Model.ProductoCaracteristica.transmisiones.VelocidadMaxima" />
                                </div>

                            </div>
                            <div id="Dimensiones" class="container tab-pane fade">
                                <br>
                                <div class="form-group">
                                    <label>
                                        Peso
                                    </label>
                                    <input class="form-control" name="Peso" value="@Model.ProductoCaracteristica.dimensiones.Peso" />
                                </div>

                                <div class="form-group">
                                    <label>
                                        Carga Util
                                    </label>
                                    <input class="form-control" name="CargaUtil" value="@Model.ProductoCaracteristica.dimensiones.CargaUtil" />
                                </div>
                                <div class="form-group">
                                    <label>
                                        Pasajeros
                                    </label>
                                    <input class="form-control" name="Pasajeros" value="@Model.ProductoCaracteristica.dimensiones.Pasajeros" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <hr />
                <div class="form-group mb-0">

                    @*<button class="btn btn-success" type="button" onclick="testData()">
                            <i class="fas fa-edit mr-1"></i>
                            Test Data
                        </button>*@

                    @if (Model.ProductID > 0)
                    {
                        <button class="btn btn-success" type="submit" id="actionButton">
                            <i class="fas fa-edit mr-1"></i>
                            @("Dashboard.Products.Update".Localized())
                        </button>
                        <button class="deleteButton btn btn-danger" type="button" data-id="@Model.ProductID">
                            <i class="fas fa-trash-alt mr-1"></i>
                            @("Dashboard.Products.Delete".Localized())
                        </button>
                    }
                    else
                    {
                        <button class="btn btn-success" type="submit" id="actionButton">
                            <i class="fas fa-plus mr-1"></i>
                            @("Dashboard.Products.Save".Localized())
                        </button>
                    }
                    <a class="btn btn-secondary" href="@Url.ListAction("Products")">
                        <i class="fas fa-angle-double-left mr-1"></i>
                        @("Dashboard.Products.Cancel".Localized())
                    </a>
                </div>
            </div>
        </div>
    </form>
</div>

<div id="imageTemplate" style="display:none">
    <div class="thisImage col-md-3">
        <div class="card mt-4">
            <div class="uPicHolder card-body text-center">
                <img class='image img-thumbnail' src='' />
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">
                    <input type="hidden" name="productImageId" class="stock-color-image-id" value="0" />
                    <input type="radio" name="ThumbnailPicture" class="mr-1" value=''>
                    <label class="imageInputLabel">@("Dashboard.Products.Action.SetThumbnailImage".Localized())</label>
                    <button class="btn btn-info btn-block" type="button">Agregar Color/Stock</button>
                    <div class="div-product-color" style="display:none">
                        <label>Color</label>
                        <select class="form-control sel-color">
                            <option value="0">Seleccione...</option>

                            @foreach (var color in Model.Colors)
                            {
                                <option value="@color.ID">@color.Description</option>
                            }
                        </select>
                        <label>Stock</label>
                        <input type="number" class="form-control stock-color" value="0" min="0" max="100" />
                    </div>
                </li>
            </ul>
            <div class="card-footer">
                <button type="button" class="btn btn-danger" onclick="removeImage(this)"><i class="fas fa-times mr-1"></i> @("Dashboard.Products.Action.RemovePicture".Localized())</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="varianteModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Agregar Variantes</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <ul class="nav nav-tabs" id="myTab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="talla-tab" data-toggle="tab" href="#talla" role="tab" aria-controls="talla" aria-selected="true">Talla</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="color-tab" data-toggle="tab" href="#color" role="tab" aria-controls="color" aria-selected="false">Color</a>
                    </li>
                </ul>
                <div class="tab-content" id="myTabContent">
                    <div class="tab-pane fade show active" id="talla" role="tabpanel" aria-labelledby="talla-tab">
                        <div class="row">
                            <div class="col-md-12" id="varianteTallaBody">

                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="color" role="tabpanel" aria-labelledby="color-tab">
                        <div class="row">
                            <div class="col-md-12" id="varianteColorBody">

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                <button type="button" onclick="guardarVariante()" class="btn btn-primary">Guardar</button>
            </div>
        </div>
    </div>
</div>

<script type="text/x-custom-template" id="specificationRow">
    <tr class="specificationRow new" style="display:none">
        <td class="title" scope="row"></td>
        <td class="value"></td>
        <td>
            <input type="hidden" name="specification" value="" />
            <button class="btn btn-danger deleteSpecificationButton btn-sm" type="button" onclick="removeRow(this)">
                @("Dashboard.Products.Action.SpecificationDelete".Localized())
            </button>
        </td>
    </tr>
</script>

<script type="text/x-custom-template" id="varianteRow">
    <tr class="varianteRow new" style="display:none">
        <td class="varPhoto" scope="row">
            <input name='txtVarianteTallaID' data-id='' type='hidden' value='0' />
            <input name='txtVarianteColorID' data-id='' type='hidden' value='0' />
            <input name='txtVariantePhoto' type='hidden' value='0' />
        </td>
        <td class="varDescription"></td>
        <td class="varStock"><input class='form-control'  name='txtVarianteStock' type='text' value='0' /> </td>
        <td class="varSku"><input class='form-control'  name='txtVarianteSku' type='text' value='' /> </td>
        <td class="varPrice"><input class='form-control' name='txtVariantePrice' type='text' value='0' /> </td>
        <td>
            <input type="hidden" name="specification" value="" />
            <button class="btn btn-danger deleteSpecificationButton btn-sm" type="button" onclick="removeRow(this)">
                @("Dashboard.Products.Action.SpecificationDelete".Localized())
            </button>
        </td>
    </tr>
</script>

<script type="text/x-custom-template" id="colorRow">
    <tr class="colorRow new" style="display:none">
        <td class="title" scope="row"></td>
        <td class="value"></td>
        <td>
            <input type="hidden" name="color" value="" />
            <button class="btn btn-danger deleteColorButton btn-sm" type="button" onclick="removeRow(this)">
                Eliminar
            </button>
        </td>
    </tr>
</script>



@section scripts {

    <script type="text/javascript">

        function setVariantesDB() {

            var existe = $("#ExisteProductStock").val();
            console.log(existe);

            if (existe == 1) {

                

                @*variante = {
                    tallasIDs: [@Html.Raw(string.Join(",", (Model.ProductStocks.Select(x => string.Format("\"{0}\"", x.TallaID)))))],
                    tallasIDs: [@Html.Raw(string.Join(",", (Model.ProductStocks.Select(x => string.Format("\"{0}\"", x.TallaID)))))],
                    tallasNames: [@Html.Raw(string.Join(",", (Model.ProductStocks.Select(x => string.Format("\"{0}\"", x.TallaName)))))],
                    colorsIDs: [@Html.Raw(string.Join(",", (Model.ProductStocks.Select(x => string.Format("\"{0}\"", x.ColorID)))))],
                    colorsNames: [@Html.Raw(string.Join(",", (Model.ProductStocks.Select(x => string.Format("\"{0}\"", x.ColorName)))))],
                    stocks: [@Html.Raw(string.Join(",", (Model.ProductStocks.Select(x => string.Format("\"{0}\"", x.Stock)))))],
                    precio: [@Html.Raw(string.Join(",", (Model.ProductStocks.Select(x => string.Format("\"{0}\"", x.Precio)))))],
                    sku: [@Html.Raw(string.Join(",", (Model.ProductStocks.Select(x => string.Format("\"{0}\"", x.SKU)))))]
                };*@

        }
            else {

                variante = {
                    tallasIDs: [],
                    tallasNames: [],
                    colorsIDs: [],
                    colorsNames: [],
                    stocks: [],
                    precio: [],
                    sku: []
                };
            }
        }

    </script>

}

<script>

    let variante = {
        tallasIDs : [],
        tallasNames : [],
        colorsIDs : [],
        colorsNames: [],
        stocks: [],
        precio: [],
        sku: []
    };

     $(document).ready(function () {
        $("#TipoProducto").trigger("change");
         



        $("#SpecificationTitle").autocomplete({
            source: availableSpecificationTitles
        });

         setVariantesDB();

         //Modal Variante
         $('#myModal').on('shown.bs.modal', function () {
             $('#myInput').trigger('focus')
         })

         CKEDITOR.replace('Description', { height: 700, contentsLangDirection: '@(AppDataHelper.IsRTL ? "rtl" : "ltr")', defaultLanguage: 'en', language: '@AppDataHelper.CurrentLanguage.ShortCode' });

     });

    

    function loadVariantes() {
        loadTallas();
        loadColors();
    }

    function loadTallas() {
            let data = {};
            let url = "@Url.Action("LoadTallas", "Products")";

            $.post(url, data).done(function (data) {
            fillSizes(data, "varianteTallaBody");
            }).fail(manejarError).always(function () {
            });
    }

    function loadColors() {
            let data = {};
            let url = "@Url.Action("LoadColores", "Products")";

            $.post(url, data).done(function (data) {
            fillColors(data, "varianteColorBody");
            }).fail(manejarError).always(function () {
            });
    }

            function guardarVariante() {
            let tallasIDs = [];
            let tallasNames = [];
            let colorIDs = [];
            let colorNames = [];
            let varianteObjTemp = {
            tallasIDs: [],
            tallasNames: [],
            colorsIDs: [],
            colorsNames: [],
            };

            $("#varianteTable tbody").empty();

            $("#ulTallas input").each(function () {

            let chk = $(this).is(':checked');

            if (chk) {
            let tallaId = $(this).attr("data-id");
            let tallaName = $(this).attr("data-name");
            tallasIDs.push(tallaId);
            tallasNames.push(tallaName);
            }
            });

            varianteObjTemp.tallasIDs = tallasIDs;
            varianteObjTemp.tallasNames = tallasNames;

            $("#ulColors input").each(function () {

            let chk = $(this).is(':checked');

            if (chk) {
            let colorId = $(this).attr("data-id");
            let colorName = $(this).attr("data-name");
            colorIDs.push(colorId);
            colorNames.push(colorName);
            }
            });

            varianteObjTemp.colorsIDs = colorIDs;
            varianteObjTemp.colorsNames = colorNames;

            createTemplateVariante(varianteObjTemp);
            fillTableVariante();


            $('#varianteModal').modal('hide')
            }

            function fillTableVariante() {

            var fila = 0;

            $("#varianteTable .varDescription").each(function () {

            let tallaId = $('input[name="txtVarianteStock' + fila + '"]').attr("data-size-id");
            let colorId = $('input[name="txtVarianteStock' + fila + '"]').attr("data-color-id");
            let posTallas = [];
            let posFinal = -1;

            if (tallaId != 0) {
            if (colorId != 0) {

            //Existe Talla in Array
            var posicionTallaSearch = $.inArray(tallaId, variante.tallasIDs);
            //Existe Color in Array
            var posicionColorSearch = $.inArray(colorId, variante.colorsIDs);

            console.log("posicionTallaSearch: " + posicionTallaSearch);
            console.log("posicionColorSearch: " + posicionColorSearch);

            //Si existe Talla y Existe Color (Existen ambos, obtener precios)
            //Si existe Talla y No Existe Color (Solo existe talla)
            //No existe Talla y Existe Color (Solo existe color)
            //No existe Talla y No Existe Color (Ambos nuevos)

            if (posicionTallaSearch >= 0) {
            if (posicionColorSearch >= 0) {

            //Logica si existen ambos

            //Obtener posiciones de talla
            var position = 0;
            variante.tallasIDs.forEach(x => {
            if (x == tallaId) {
            posTallas.push(position);
            }
            position++;
            });

            //Recorrer Posiciones de Tallas
            posTallas.forEach(x => {
            let colorpos = variante.colorsIDs[x];
            if (colorpos == colorId) {
            posFinal = x;
            }
            });

            if (posFinal >= 0) {

            let tempTalla = variante.tallasNames[posFinal];
            let tempColor = variante.colorsNames[posFinal];
            let tempPrecio = variante.precio[posFinal];
            let tempSku = variante.sku[posFinal];
            let tempStock = variante.stocks[posFinal];

            $('input[name="txtVarianteStock' + fila + '"]').val(tempStock);
            $('input[name="txtVarianteSku' + fila + '"]').val(tempSku);
            $('input[name="txtVariantePrice' + fila + '"]').val(tempPrecio);
            $('input[name="txtVariantePhoto' + fila + '"]').val("");
            }

            } else {

            //Obtener posiciones de talla
            var position = 0;
            variante.tallasIDs.forEach(x => {
            if (x == tallaId) {
            posFinal = position;
            }
            position++;
            });

            if (posFinal >= 0) {

            let tempTalla = variante.tallasNames[posFinal];
            let tempColor = variante.colorsNames[posFinal];
            let tempPrecio = variante.precio[posFinal];
            let tempSku = variante.sku[posFinal];
            let tempStock = variante.stocks[posFinal];

            $('input[name="txtVarianteStock' + fila + '"]').val(tempStock);
            $('input[name="txtVarianteSku' + fila + '"]').val(tempSku);
            $('input[name="txtVariantePrice' + fila + '"]').val(tempPrecio);
            $('input[name="txtVariantePhoto' + fila + '"]').val("");
            }
            }


            }
            } else {
            // Lógica cuando no existe color



            }

            }  else if(colorId != '0') {
            console.log("Color es diferente de cero");

            }

            //{
            //}


            //if (sku == '') sku = '0';

            //varianteTallaIds.push(tallaId);
            //varianteColorIds.push(colorId);
            //varianteStocks.push(stock);
            //varianteSKUs.push(sku);
            //variantePrices.push(price);
            //variantePhotos.push("");
            posFinal = -1;
            fila++;
            });


            //for (i = 0; i < variante.tallasIDs.length; i++) {

            //    tallaId = variante.tallasIDs[i];
            //    stock = variante.stocks[i];
            //    sku = variante.sku[i];
            //    price = variante.precio[i];

            //    $('input[name="txtVarianteStock' + i + '"]').val(stock);
            //    $('input[name="txtVarianteSku' + i + '"]').val(sku);
            //    $('input[name="txtVariantePrice' + i + '"]').val(price);
            //    $('input[name="txtVariantePhoto' + i + '"]').val("");

            //}
            }

            function fillVarianteObject(tallaID, tallaName, colorID, colorName) {
            //sizeId, size, colorId, color, fila

            let tallaIds = variante.tallasIDs;
            let tallaNames = variante.tallasNames;
            let colorIds = variante.colorsIDs;
            let colorNames = variante.colorsNames;
            let stocks = variante.stocks;
            let prices = variante.precio;
            let skus = variante.sku;


            var posicionSearch = $.inArray(tallaID, variante.tallasIDs);
            if (posicionSearch < 0) {
            tallaIds.push(tallaID);
            tallaNames.push(tallaName);
            colorIds.push(colorID);
            colorNames.push(colorName);
            stocks.push('0');
            prices.push('0');
            skus.push('');
            }

            variante = {
            tallasIDs: tallaIds,
            tallasNames: tallaNames,
            colorsIDs: colorIds,
            colorsNames: colorNames,
            stocks: stocks,
            precio: prices,
            sku: skus
            };

            return variante;

            }

            function createTemplateVariante(objVariante) {

            var tallaNames = objVariante.tallasNames;
            var colorNames = objVariante.colorsNames;
            let existTallaNames = tallaNames.length > 0 ? true: false;
            let existColorNames = colorNames.length > 0 ? true : false;

            let fila = 0;
            let contadorTalla = 0;

            if (existTallaNames) {

            tallaNames.forEach(tallaName => {

            if (existColorNames) {
            let contadorColor = 0;
            colorNames.forEach(colorName => {

            var colorId = objVariante.colorsIDs[contadorColor];
            var tallaId = objVariante.tallasIDs[contadorTalla];
            printTampleVarianteRow(tallaId, tallaName, colorId, colorName, fila);
            fila++;
            contadorColor++;
            });

            } else {
            var tallaId = objVariante.tallasIDs[fila];
            printTampleVarianteRow(tallaId, tallaName, 0, '', fila);
            fila++;
            }
            contadorTalla++;
            });
            } else {

            colorNames.forEach(colorName => {
            var colorId = objVariante.colorsIDs[contador];
            printTampleVarianteRow(0, '', colorId, colorName, contador);
            contador++;
            });
            }
            showHideNoVariantesRow();
            }

            function printTampleVarianteRow(sizeId, size, colorId, color, fila) {

            fillVarianteObject(sizeId, size, colorId, color);

            $("#varianteTable tbody").append($("#varianteRow").clone().html());

            var $newRow = $(".new", "#varianteTable tbody");

            var name = size+" "+color;
            name = name.trim();
            //for display to user
            $(".varPhoto", $newRow).html('Photo');
            $(".varDescription", $newRow).html(name);
            //for submitting value
            $("[name=txtVarianteStock]", $newRow).attr("data-color-id", colorId);
            $("[name=txtVarianteStock]", $newRow).attr("data-size-id", sizeId);
            $("[name=txtVarianteStock]", $newRow).attr("name", "txtVarianteStock" + fila);
            $("[name=txtVarianteSku]", $newRow).attr("name", "txtVarianteSku" + fila);
            $("[name=txtVariantePrice]", $newRow).attr("name", "txtVariantePrice" + fila);
            $("[name=txtVarianteTallaID]", $newRow).attr("name", "txtVarianteTallaID" + fila);
            $("[name=txtVarianteColorID]", $newRow).attr("name", "txtVarianteColorID" + fila);
            $("[name=txtVariantePhoto]", $newRow).attr("name", "txtVariantePhoto" + fila);


            /*Add Ids*/
            $newRow.attr("id", "variante" + fila);
            $newRow.removeClass("new");
            //show this new specification
            $newRow.show();
            }

            function llenarCombo(data, id, propiedadMostrar, propiedadId, valueDefecto = "") {

                var contenido = "";
            var elemento;
                contenido += "<option value='" + valueDefecto + "'>--Seleccionar--</option>";
            for (var j = 0; j < data.length; j++) {
            elemento = data[j];
            contenido += "<option value='" + elemento[propiedadId] + "'>" + elemento[propiedadMostrar] + "</option>"
            }
            contenido += "";
            document.getElementById(id).innerHTML = contenido;
            }

            function fillSizes(data, id) {

            var tallaIds = variante.tallasIDs;

                var contenido = "<label>Elija Tallas:</label>";
                contenido += "<ul class='list-group' id='ulTallas'>";

                data.forEach(elemento => {
                let checked = '';
                tallaIds.forEach(id => {
                if (id == elemento["TallaID"]) {
                checked = 'checked';
                }
                });
                    contenido += "<li class='list-group-item'><input " + checked + " data-id='" + elemento["TallaID"] + "' data-name='" + elemento["Description"] + "' type='checkbox'> " + elemento["Description"] + "</li>";
                });
                contenido += "</ul>";
            document.getElementById(id).innerHTML = contenido;
            }

            function fillColors(data, id) {
            var colorIds = variante.colorsIDs;
            var contenido = "<label>Elija Colores:</label>";
            contenido += "<ul class='list-group' id='ulColors'>";
                data.forEach(elemento => {
                let checked = '';
                colorIds.forEach(id => {
                if (id == elemento["ColorID"]) {
                checked = 'checked';
                }
                });
                contenido += "<li class='list-group-item'><input type='checkbox' "+ checked +" data-id='" + elemento["ColorID"] + "' data-name='" + elemento["Description"] + "'> " + elemento["Description"] + "</li>";
                });
                contenido += "</ul>";
            document.getElementById(id).innerHTML = contenido;
            }

            function testData(id) {
            $("#btn-add-color-id-" + id).html("New Text");
            }

            $("#cboCatalogo").change(function () {

            let varCatalogoID = $("#cboCatalogo").val();
            let url = "@Url.Action("LoadCategoriesAndMarcasByCatalogoID", "Products")";
            let data = { CatalogoID: varCatalogoID };

            $.post(url, data).done(function (data) {
            llenarCombo(data.Categorias, "cboCategoria", "NombreCategoria", "ID", "0");
            llenarCombo(data.Marcas, "cboMarca", "NombreMarca", "ID", "0");
            }).fail(manejarError).always(function () {
            });
            });

            function manejarError(err) {
            console.log(err.responseText);
            }

            var productSpecificationCount = @(productSpecificationCount + 1);
            var productColorCount = @(productColorCount + 1);

            function removeRow(column) {
            $(column).parents("tr").remove();

            showHideNoSpecificationsRow();
            }

            function showHideNoSpecificationsRow() {
            if ($(".specificationRow").length > 0) {
            $("#noSpecificationRow").hide();
            }
            else {
            $("#noSpecificationRow").show();
            }
            }

            function showHideNoVariantesRow() {
            if ($(".varianteRow").length > 0) {
            $("#noVarianteRow").hide();
            }
            else {
            $("#noVarianteRow").show();
            }
            }

            function showHideNoColorsRow() {
            if ($(".colorRow").length > 0) {
            $("#noColorRow").hide();
            }
            else {
            $("#noColorRow").show();
            }
            }

            $("#addSpecification").click(function () {
            var specificationTitle = $("#SpecificationTitle").val();
            var specificationValue = $("#SpecificationValue").val();

            if (specificationTitle && specificationValue)
            {
            $("#specificationsTable tbody").append($("#specificationRow").clone().html());

            var $newRow = $(".new", "#specificationsTable tbody");

            //for display to user
            $(".title", $newRow).html(specificationTitle);
            $(".value", $newRow).html(specificationValue);

            //for submitting value
            $("[name=specification]", $newRow).val(specificationTitle + "~" + specificationValue);
            $("[name=specification]", $newRow).attr("name", "specification" + productSpecificationCount);
            $newRow.attr("id", "specification" + productSpecificationCount);
            $newRow.removeClass("new");

            //show this new specification
            $newRow.show();

            //for new specification
            productSpecificationCount++;

            //reset inputs
            $("#SpecificationTitle").val("");
            $("#SpecificationValue").val("");

            showHideNoSpecificationsRow();
            }
            });

            $("#addColor").click(function () {
            var colorSelect = $("#ColorID").val();
            var colorSplit = colorSelect.split(",");
            var colorId = colorSplit[0];
            var colorValue = "";
            if (colorSplit.length > 1) {
            colorValue = colorSplit[1];
            }
            var productId = @Model.ProductID;
            var colorDescription = $("#ColorID").find('option:selected').text();

            var colorValor = '<span style="background-color: '+ colorValue +'; height:10px; width:10px"></span>';

            if (colorId && colorDescription) {
            $("#colorsTable tbody").append($("#colorRow").clone().html());

            var $newRow = $(".new", "#colorsTable tbody");

            //for display to user
            $(".title", $newRow).html(colorDescription);
            $(".value", $newRow).html(colorValor);

            //for submitting value
            $("[name=color]", $newRow).val(colorDescription + "~" + colorValor);
            $("[name=color]", $newRow).attr("name", "colorproduct" + productColorCount);
            $newRow.attr("id", "colorproduct" + productColorCount);
            $newRow.removeClass("new");

            //show this new specification
            $newRow.show();

            //for new specification
            productColorCount++;

            //reset inputs
            showHideNoColorsRow();
            }
            });

            $("#actionForm").validate({
            errorClass: "alert alert-danger",
            errorElement: "div",
            rules: {
            Name: {
            required: true,
            minlength: 3,
            maxlength: 150
            },
            CategoryID: {
            required: true
            },
            Summary: {
            required: true,
            minlength: 20,
            maxlength: 200
            },
            Description: {
            required: updateEditFields(),
            minlength: 20
            },
            Price: {
            required: true,
            range: [1, 10000000]
            },
            ProductPictures: {
            required: true,
            },
            StockQuantity: {
            required: true,
            range: [0, 10000000]
            },
            },
            messages: {
            Name: {
            required: "@("Dashboard.Products.Action.Validation.NameRequired".Localized())",
            minlength: "@("Dashboard.Products.Action.Validation.NameMinimumLength".LocalizedString().Replace("{min}", "15"))",
            maxlength: "@("Dashboard.Products.Action.Validation.NameMaximumLength".LocalizedString().Replace("{max}", "150"))"
            },
            CategoryID: {
            required: "@("Dashboard.Products.Action.Validation.CategoryRequired".Localized())",
            },
            Summary: {
            required: "@("Dashboard.Products.Action.Validation.SummaryRequired".Localized())",
            minlength: "@("Dashboard.Products.Action.Validation.SummaryMinimumLength".LocalizedString().Replace("{min}", "20"))",
            maxlength: "@("Dashboard.Products.Action.Validation.SummaryMaximumLength".LocalizedString().Replace("{max}", "200"))"
            },
            Description: {
            required: "@("Dashboard.Products.Action.Validation.DescriptionRequired".Localized())",
            minlength: "@("Dashboard.Products.Action.Validation.DescriptionMinimumLength".LocalizedString().Replace("{min}", "20"))"
            },
            Price: {
            required: "@("Dashboard.Products.Action.Validation.PriceRequired".Localized())",
            range: "@("Dashboard.Products.Action.Validation.PriceRange".LocalizedString().Replace("{min}", "1").Replace("{max}", "10000000"))"
            },
            ProductPictures: {
            required: "@("Dashboard.Products.Action.Validation.ProductPicturesRequired".Localized())"
            },
            StockQuantity: {
            required: "@("Dashboard.Products.Action.Validation.StockQuantityRequired".Localized())",
            range: "@("Dashboard.Products.Action.Validation.StockQuantityRange".LocalizedString().Replace("{min}", "1").Replace("{max}", "10000000"))"
            },
            },
            highlight: function (element, errorClass) {
            $(element).removeClass(errorClass);
            },
            errorPlacement: function ( error, element ) {
            if(element.parent().hasClass('input-group')){
            error.insertAfter( element.parent() );
            }else{
            error.insertAfter( element );
            }
            }
            });

            $("#productPictures").change(function () {

            var pictures = this.files;

            var picsData = new FormData();

            for (var i = 0; i < pictures.length; i++) {
            picsData.append("Picture", pictures[i]);
            }

            addLoader("pics-container");
            $.ajax({
            url: "@Url.UploadPictures()",
            type: "post",
            data: picsData,
            dateType: "json",
            processData: false,
            contentType: false
            })
            .done(function (responses) {
            for (var i = 0; i < responses.length; i++) {
            var picResponse = responses[i];

            AttachNewImage(picResponse.pictureURL, picResponse.ID);
            }
            removeLoader("pics-container");
            })
            .fail(function () {
            removeLoader("pics-container");
            Swal.fire("@("Dashboard.Message.Error".Localized())", "@("Dashboard.Message.GenericErrorMessage".Localized())", "error");
            });
            });

            function AttachNewImage(imageURL, imageID) {
            var $newimgHTML = $("#imageTemplate").clone();

            $newimgHTML.find(".image").attr("src", "/content/images/" + imageURL);
            $newimgHTML.find(".image").attr("data-id", imageID);
            $newimgHTML.find(".sel-color").attr("id", "sel-color-id-"+imageID);
            $newimgHTML.find(".stock-color").attr("id", "stock-color-id-"+imageID);
            $newimgHTML.find(".div-product-color").attr("data-id", "div-product-color-"+imageID);
            $newimgHTML.find("input[name=productImageId]").val(imageID);
            $newimgHTML.find("input[name=productImageId]").attr("id", "product-image-id"+imageID);
            $newimgHTML.find("button:contains('Agregar Color/Stock')").attr('onClick', 'showhideColorStock('+ imageID+')');
            $newimgHTML.find("button:contains('Agregar Color/Stock')").attr("id", "btn-add-color-id-" + imageID);
            $newimgHTML.find("input[name=ThumbnailPicture]").val(imageID);
            $newimgHTML.find("input[name=ThumbnailPicture]").attr("id", "r"+ imageID);
            $newimgHTML.find(".imageInputLabel").attr("for", "r"+ imageID);

            $("#picturesArea").append($newimgHTML.html());
            }

            function showhideColorStock(id) {

            $('[data-id="div-product-color-'+id+'"]').css('visibility', 'visible');

            if ($('[data-id="div-product-color-' + id + '"]').is(":visible")) {
            $('[data-id="div-product-color-' + id + '"]').css('display', 'none');
            $("#product-image-id-" + id).val("0");
            $("#btn-add-color-id-" + id).html("Agregar Color/Stock");
            $("#btn-add-color-id-" + id).removeAttr("class");
            $("#btn-add-color-id-" + id).attr("class", "btn btn-info btn-block");


            } else {
            $('[data-id="div-product-color-' + id + '"]').css('display', 'block');
            $("#product-image-id-" + id).val(id);
            $("#btn-add-color-id-" + id).html("Eliminar Color/Stock");
            $("#btn-add-color-id-" + id).removeAttr("class");
            $("#btn-add-color-id-" + id).attr("class", "btn btn-danger btn-block");
            $("#sel-color-id-" + id).val("0");
            $("#stock-color-id-" + id).val("0.0");
            }
            }

            function buildVarianteFinal() {

            let varianteTallaIds =[];
            let varianteColorIds=[];
            let varianteStocks=[];
            let varianteSKUs=[];
            let variantePrices=[];
            let variantePhotos = [];
            let id = 0;

            $("#varianteTable .varDescription").each(function () {

            //let tallaId = $('input[name="txtVarianteTallaID' + id + '"]').val();
            //let colorId = $('input[name="txtVarianteColorID' + id + '"]').val();
            let stock = $('input[name="txtVarianteStock' + id + '"]').val();
            let sku =   $('input[name="txtVarianteSku' + id + '"]').val();
            let price = $('input[name="txtVariantePrice' + id + '"]').val();
            let photo = $('input[name="txtVariantePhoto' + id + '"]').val();

            let tallaId = $('input[name="txtVarianteStock' + id + '"]').attr("data-size-id");
            let colorId = $('input[name="txtVarianteStock' + id + '"]').attr("data-color-id");

            if (sku == '') sku = '0';

            varianteTallaIds.push(tallaId);
            varianteColorIds.push(colorId);
            varianteStocks.push(stock);
            varianteSKUs.push(sku);
            variantePrices.push(price);
            variantePhotos.push("");
            id++;
            });

            let objVariante = {
            varianteTallaIds: varianteTallaIds,
            varianteColorIds: varianteColorIds,
            varianteStocks: varianteStocks,
            varianteSKUs: varianteSKUs,
            variantePrices: variantePrices,
            variantePhotos: variantePhotos
            };
            return objVariante;
            }


            $("#actionForm").submit(function (e) {
            updateEditFields();

            var imageIDs = [];
            var colorStockIds = [];
            var colorIds = [];
            var stockByColors = [];

            var buildVariante = buildVarianteFinal();
            console.log("buildVariante");
            console.log(buildVariante);

            let varianteTallaIds = buildVariante.varianteTallaIds;

            console.log("varianteTallaIds");
            console.log(varianteTallaIds);

            $("#picturesArea .image").each(function () {
            var imageID = $(this).attr("data-id");
            imageIDs.push(imageID);
            });

            $("#picturesArea .stock-color-image-id").each(function () {
            var imageID = $(this).val();
            if (imageID > 0) {

            var colorId = $("#sel-color-id-" + imageID).val();
            var stock = $("#stock-color-id-" + imageID).val();

            if (colorId > 0) {
            colorStockIds.push(imageID);
            colorIds.push(colorId);
            stockByColors.push(stock);
            }
            }
            });

            $("#pictureIDs").val(imageIDs.join());
            $("#colorStockIDs").val(colorStockIds.join());
            $("#colorIDs").val(colorIds.join());
            $("#stockByColors").val(stockByColors.join());
            //Variante ProductStock
            $("#productStockBySizes").val(buildVariante.varianteTallaIds.join());
            $("#productStockByColors").val(buildVariante.varianteColorIds.join());
            $("#productStockBySKUs").val(buildVariante.varianteSKUs.join());
            $("#productStockByQuantities").val(buildVariante.varianteStocks.join());
            $("#productStockByPrices").val(buildVariante.variantePrices.join());

            if ($("#actionForm").valid()) {
            addLoader("actionForm");
            $.ajax({
            type: "post",
            data: $("#actionForm").serialize()
            })
            .done(function (response) {
            if (response.Success) {
            window.location.href = "@Url.ListAction("Products")";
            }
            else {
            removeLoader("actionForm");
            Swal.fire("@("Dashboard.Message.Error".Localized())", response.Message, "error");
            }
            })
            .fail(function () {
            removeLoader("actionForm");
            Swal.fire("@("Dashboard.Message.Error".Localized())", "@("Dashboard.Message.GenericErrorMessage".Localized())", "error");
            });
            }

            e.preventDefault();
            });

            $(".deleteButton").click(function () {
            var recordID = $(this).attr("data-id");

            Swal.fire({
            title: '@("Dashboard.Message.Warning".Localized())',
            text: "@("Dashboard.Message.ConfirmDeleteWarning".Localized())",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: '@("Dashboard.Message.ConfirmDelete".Localized())',
            cancelButtonText: '@("Dashboard.Message.CancelDelete".Localized())'
            }).then((result) => {
            if (result.value) {
            addLoader("actionForm");
            $.ajax({
            url: "@Url.DeleteAction("Products")",
            type: "post",
            data: { id: recordID }
            })
            .done(function (response) {
            if (response != null && response.Success != undefined && response.Success) {
            window.location.href = "@Url.ListAction("Products")";
            }
            else {
            removeLoader("actionForm");
            Swal.fire("@("Dashboard.Message.Error".Localized())", response.Message, "error");
            }
            })
            .fail(function () {
            removeLoader("actionForm");
            Swal.fire("@("Dashboard.Message.Error".Localized())", "@("Dashboard.Message.GenericErrorMessage".Localized())", "error");
            });
            }
            });
            });

            $("#TipoProducto").change(function () {
            if ($('#TipoProducto').is(':checked')) {

            $("#TagMotos").css("display", "block");
            }
            else {
            $("#TagMotos").css("display", "none");
            }

            });

            $("#TipoMoneda").change(function () {

            var tipoMoneda = $(this).val();

            if (tipoMoneda == "1") {
            $(".icono-moneda").html("S/");
            } else {
            $(".icono-moneda").html("$");
            }
            });
</script>