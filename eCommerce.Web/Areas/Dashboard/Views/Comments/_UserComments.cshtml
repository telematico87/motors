@model eCommerce.Web.ViewModels.CommentsListingViewModel

@if (Model != null && Model.User != null)
{
    var canDelete = User.Identity.IsAuthenticated && (User.IsInRole("Administrator") || User.Identity.GetUserId() == Model.User.Id);

    <div class="row mt-2">
        <div class="col-md-12">
            <form method="post" id="searchForm" data-action="@Url.Comments(userID: Model.User.Id, showUserCommentsOnly: true)">
                <div class="input-group">
                    <input name="searchTerm" type="text" value="@Model.SearchTerm" class="form-control" placeholder="@("Dashboard.UserDetails.Comments.SearchCommentsPlaceholder".Localized())">
                    <button id="searchBtn" type="button" class="form-control btn btn-primary"><i class="fas fa-search mr-1"></i> @("Dashboard.UserDetails.Comments.SearchComments".Localized())</button>
                    <a data-href="@Url.Comments(userID: Model.User.Id, showUserCommentsOnly: true)" role="button" class="text-white form-control btn btn-primary dataLink"><i class="fas fa-redo-alt mr-1"></i> @("Dashboard.UserDetails.Comments.Reset".Localized())</a>
                </div>
                <input type="hidden" name="page" value="1">
                <input type="hidden" name="items" value="10">
            </form>
        </div>
        <div class="col-lg-12 my-2">
            @if (Model.Comments != null && Model.Comments.Count > 0)
            {
                foreach (var comment in Model.Comments)
                {
                    var defaultStars = ConfigurationsHelper.DefaultRating - comment.Rating;

                    var commentedProduct = Model.CommentedProducts != null ? Model.CommentedProducts.FirstOrDefault(x => x.ID == comment.RecordID) : null;

                    <div class="row m-0 mb-2 pt-2 border-top">
                        <div class="col-xs-2 col-md-1 col-lg-1 p-0">
                            @Html.UserAvatar(comment.User.Picture, "img-responsive img-thumbnail", alt: comment.User.UserName, lazyLoad: false)
                        </div>
                        <div class="col-xs-10 col-md-11 col-lg-11">
                            <div class="mb-2">
                                <div class="mic-info">
                                    @("Dashboard.UserDetails.Comments.CommentUserName".LocalizedString().Replace("{user}", comment.User.FullName))
                                    <span class="small text-muted">
                                        @("Dashboard.UserDetails.Comments.CommentTimestamp".LocalizedString().Replace("{datetime}", comment.TimeStamp.ToString()))
                                    </span>
                                </div>
                                @if (commentedProduct != null && commentedProduct.ProductRecords != null && commentedProduct.ProductRecords.Count > 0)
                                {
                                    var currentLanguageProductRecord = commentedProduct.ProductRecords.FirstOrDefault(x => x.LanguageID == AppDataHelper.CurrentLanguage.ID);

                                    <a class="text-primary" href="@Url.ProductDetails(category: commentedProduct.Category.SanitizedName, ID: commentedProduct.ID)" target="_blank">
                                        @(currentLanguageProductRecord != null ? currentLanguageProductRecord.Name : string.Empty)
                                    </a>
                                }
                            </div>
                            <div class="d-flex align-items-center mb-2">
                                <div class="mr-auto text-warning">
                                    @for (int i = 1; i <= comment.Rating; i++)
                                    {
                                        <i class="fas fa-star"></i>
                                    }

                                    @for (int i = 1; i <= defaultStars; i++)
                                    {
                                        <i class="far fa-star"></i>
                                    }
                                </div>
                                <div class="ml-auto text-danger pointerCursor">
                                    <i class="fas fa-trash-alt deleteButton" title="@("Dashboard.UserDetails.Comments.DeleteComment".Localized())" data-id="@comment.ID"></i>
                                </div>
                            </div>
                            <div class="comment-text">
                                @comment.Text
                            </div>
                        </div>
                    </div>
                }

                if (Model.Pager != null && Model.Pager.TotalPages > 1)
                {
                    <nav>
                        <ul class="pagination justify-content-center">
                            @if (Model.Pager.CurrentPage == 1)
                            {
                                <li class="page-item disabled">
                                    <a class="page-link" href="#">@("Dashboard.Pagination.Previous".Localized())</a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item">
                                    <a class="page-link dataLink" data-href="@Url.Comments(userID: Model.User.Id, showUserCommentsOnly: true, searchTerm: Model.SearchTerm, pageNo: Model.Pager.CurrentPage - 1)">@("Dashboard.Pagination.Previous".Localized())</a>
                                </li>
                            }

                            @for (int page = Model.Pager.StartPage; page < Model.Pager.EndPage + 1; page++)
                            {
                                var active = page == Model.Pager.CurrentPage ? "active" : string.Empty;

                                <li class="page-item @active">
                                    <a class="page-link dataLink" data-href="@(!string.IsNullOrEmpty(active) ? "" : Url.Comments(userID: Model.User.Id, showUserCommentsOnly: true, searchTerm: Model.SearchTerm, pageNo: page))">
                                        @page
                                    </a>
                                </li>
                            }

                            @if (Model.Pager.CurrentPage == Model.Pager.EndPage)
                            {
                                <li class="page-item disabled">
                                    <a class="page-link" href="#">@("Dashboard.Pagination.Next".Localized())</a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item">
                                    <a class="page-link dataLink" data-href="@Url.Comments(userID: Model.User.Id, showUserCommentsOnly: true, searchTerm: Model.SearchTerm, pageNo: Model.Pager.CurrentPage + 1)">@("Dashboard.Pagination.Next".Localized())</a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            }
            else
            {
                <div class="alert alert-warning" role="alert">
                    @("Dashboard.UserDetails.Comments.NoComments".Localized())
                </div>
            }
        </div>
    </div>

    <script>
        $("#searchForm").submit(function (e) {
            searchComments();

            e.preventDefault();
        });

        $("#searchBtn").click(searchComments);

        function searchComments() {
            addLoader("response-holder");

            $.ajax({
                url: $("#searchForm").attr("data-action"),
	    		method: "post",
                data: $("#searchForm").serialize()
	    	})
	    	.done(function (response) {
                $("#response-holder").html(response);
                 removeLoader("response-holder");
	    	})
            .fail(function () {
                 removeLoader("response-holder");
                 Swal.fire("@("Dashboard.Message.Error".Localized())", "@("Dashboard.Message.GenericErrorMessage".Localized())", "error");
		    });
        }

        $(".dataLink").click(function () {
            var url = $(this).attr("data-href");

            if (url != undefined && url != "") {
                addLoader("response-holder");

                $.ajax({
                    url: url,
                })
                .done(function (response) {
                    $("#response-holder").html(response);
                     removeLoader("response-holder");
                })
                .fail(function () {
                     removeLoader("response-holder");
                     Swal.fire("@("Dashboard.Message.Error".Localized())", "@("Dashboard.Message.GenericErrorMessage".Localized())", "error");
		        });
            }
        });

        $(".deleteButton").click(function () {
            var recordID = $(this).attr("data-id");

            Swal.fire({
                title: '@("Dashboard.Message.Warning".Localized())',
                text: "@("Dashboard.Message.ConfirmDeleteWarning".Localized())",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '@("Dashboard.Message.ConfirmDelete".Localized())',
                cancelButtonText: '@("Dashboard.Message.CancelDelete".Localized())'
            }).then((result) => {
                if (result.value) {
                    addLoader("response-holder");
       	    	    $.ajax({
       	    	    	url: "@Url.DeleteAction("Comments")",
                        type: "post",
                        data: { id: recordID }
       	    	    })
                    .done(function (response) {
                        removeLoader("response-holder");

                        if (response != null && response.Success != undefined && response.Success) {
                            searchComments();
       	    	        }
                        else {
                            Swal.fire("@("Dashboard.Message.Error".Localized())", response.Message, "error");
       	    	        }
       	    	    })
                    .fail(function () {
                        removeLoader("response-holder");
                        Swal.fire("@("Dashboard.Message.Error".Localized())", "@("Dashboard.Message.GenericErrorMessage".Localized())", "error");
       	            });
                }
            });
        });
    </script>
}
else
{
    <div class="alert alert-warning" role="alert">
        @("Dashboard.UserDetails.Comments.NoComments".Localized())
    </div>
}
