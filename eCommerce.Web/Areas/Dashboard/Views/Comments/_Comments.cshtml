@model eCommerce.Web.ViewModels.CommentablePageViewModel

@{
    var haveComments = Model != null && Model.Comments != null && Model.Comments.Count > 0;
    
    var defaultRating = 5;
    var itemRating = haveComments ? Math.Ceiling(Model.Comments.Average(x => x.Rating)) : 0;

    var userID = User.Identity.IsAuthenticated ? User.Identity.GetUserId() : "";
}

<div class="card card-outline-secondary my-4">
    <div class="card-header @(!haveComments ? "border-bottom-0" : string.Empty)">
        <h5 class="mb-0 float-left">
            @string.Format("{0} {1}", haveComments ? Model.Comments.Count : 0, haveComments && Model.Comments.Count > 1 ? "Comments" : "Comment")
        </h5>

        <span class="text-warning float-right align-middle" title="Average of all Ratings.">
            @for (int i = 1; i <= itemRating; i++)
            {
                <i class="fas fa-star"></i>
            }

            @for (int i = 1; i <= defaultRating - itemRating; i++)
            {
                <i class="far fa-star"></i>
            }
        </span>
    </div>

    @if (haveComments)
    {
        <div class="card-body">
            @foreach (var comment in Model.Comments)
            {
                var defaultStars = 5 - comment.Rating;

                <div class="row commentRow">
                    <div class="col-md-2">
                        @Html.UserAvatar(comment.User.Picture, "img rounded-circle img-fluid", style: "height:105px;", alt: "User Avatar", lazyLoad: false)
                    </div>
                    <div class="col-md-10">
                        <p>
                            <a class="float-left" @*href="@Url.Action("UserProfile", "Profile", new { userid = comment.UserID })"*@>
                                <strong>@comment.User.FullName</strong>
                            </a>
                            <span class="float-right mb-2">
                                @comment.TimeStamp
                            </span>
                        </p>
                        <div class="clearfix"></div>
                        <p>
                            @comment.Text
                        </p>

                        <div class="float-left">
                            <span class="text-warning">
                                @for (int i = 1; i <= comment.Rating; i++)
                                {
                                    <i class="fas fa-star"></i>
                                }

                                @for (int i = 1; i <= defaultStars; i++)
                                {
                                    <i class="far fa-star"></i>
                                }
                            </span>
                        </div>

                        @if (comment.UserID == userID)
                        {
                            <div class="float-right">
                                <button data-id="@comment.ID" class="btn btn-danger m-2 btnDeleteComment"><i class="fas fa-trash-alt mr-1"></i> Delete</button>
                            </div>
                        }
                    </div>
                </div>

                if (comment != Model.Comments.Last())
                {
                    <hr />
                }
            }
        </div>
    }

    <div class="card-footer">
        @if (User.Identity.IsAuthenticated)
        {
            <form id="commentForm">
                <input type="hidden" name="EntityID" value="@Model.EntityID" />
                <input type="hidden" name="RecordID" value="@Model.RecordID" />
                <input type="hidden" name="Rating" id="ratingsValue" value="1" />

                <div class="form-group">
                    <textarea class="form-control" rows="3" name="Text" placeholder="Write your comment here."></textarea>
                </div>

                <span class="text-warning float-right">
                    <i class="ratingStar fas fa-star" data-value="1"></i>
                    <i class="ratingStar far fa-star" data-value="2"></i>
                    <i class="ratingStar far fa-star" data-value="3"></i>
                    <i class="ratingStar far fa-star" data-value="4"></i>
                    <i class="ratingStar far fa-star" data-value="5"></i>
                </span>

                <button class="btn btn-success float-left" id="btnComment" type="button">Leave your Comment</button>
            </form>
        }
        else
        {
            <b>You need to login to leave comments.</b>
        }
    </div>
</div>

<script>
	$("#commentForm").validate({
		errorClass: "alert alert-danger",
		errorElement: "div",
		rules: {
			Text: {
				required: true,
				minlength: 15,
				maxlength: 500
			},
			EntityID: {
				required: true
			},
			RecordID: {
				required: true
			},
		},
		messages: {
			Text: {
				required: "Please add a valid comment.",
				minlength: "Minimum Length is 15.",
				maxlength: "Maximum Length is 500."
			},
			EntityID: {
				required: "Comment type not identified."
			},
			RecordID: {
				required: "Comment Record not identified.",
			}
		},
		highlight: function (element, errorClass) {
			$(element).removeClass(errorClass);
		}
	});

	$("#btnComment").click(function () {
		if ($("#commentForm").valid()) {
			$.ajax({
				url: "@Url.Action("LeaveComment", "Comments", new { area = "Dashboard" })",
				type: "post",
				data: $("#commentForm").serialize()
			})
			.done(function (response) {
				if (response.Success) {
					window.location.reload();
				}
				else {
					swal("Error!", response.Message, "error");
				}
			})
			.fail(function () {
				swal("Error!", "Error Occured. Please try again later.", "error");
			});
		}
	});

	$(".ratingStar").click(function () {
		$(".ratingStar").addClass("far").removeClass("fas");

		var $thisStar = $(this);
		$thisStar.addClass("fas").removeClass("far");
		$thisStar.prevAll(".ratingStar").addClass("fas").removeClass("far");
		$("#ratingsValue").val($thisStar.attr("data-value"));
    });

    $(".btnDeleteComment").click(function () {
        var commentRow = $(this).parents(".commentRow");

        swal({
			title: "Are you sure you want to delete this comment?",
			icon: "warning",
			buttons: true,
			dangerMode: true,
		})
		.then((willDelete) => {
			if (willDelete) {
				$("#dtLoader").show();
				$("#response-holder").hide();

				$.ajax({
					url: "@Url.DeleteAction("Comments")",
                       method: "post",
                       data: { id : $(this).attr("data-id") }
				})
                .done(function (response) {
                    if (response != null && response.Success != undefined && response.Success) {
                        commentRow.next("hr").remove();
                        commentRow.remove();
				    }
				    else {
                        swal("Error!", response.Message, "error");
				    }
				});
			}
		});
     });
</script>